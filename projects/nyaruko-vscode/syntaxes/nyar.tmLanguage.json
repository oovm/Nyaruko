{
    "name": "Valkyrie",
    "scopeName": "source.nyar",
    "version": "v0.0.1",
    "uuid": "",
    "information_for_contributors": [
        "aster: galaster@foxmail.com"
    ],
    "fileTypes": [
        "nyar"
    ],
    "patterns": [
        {
            "include": "#code"
        }
    ],
    "repository": {
        "code": {
            "patterns": [
                {
                    "include": "#Shebang"
                },
                {
                    "include": "#Comment"
                },
                {
                    "include": "#String"
                },
                {
                    "include": "#Constant"
                },
                {
                    "include": "#DotCall"
                },
                {
                    "include": "#Keyword"
                }
            ]
        },
        "Shebang": {
            "match": "^#!(.*)$",
            "captures": {
                "1": {
                    "name": "string.unquoted.shebang.nyar"
                }
            },
            "name": "comment.block.shebang.nyar"
        },
        "Comment": {
            "patterns": [
                {
                    "name": "comment.block.nyar",
                    "begin": "(^|\\G)(\\s*)(%{3,})\\s*(?=([^%]*)?$)",
                    "end": "(^|\\G)(\\2|\\s{0,3})(\\3)\\s*$",
                    "beginCaptures": {
                        "3": {
                            "name": "punctuation.definition.comment"
                        },
                        "4": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "endCaptures": {
                        "3": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "patterns": [
                        {
                            "include": "text.html.markdown"
                        }
                    ]
                },
                {
                    "begin": "(^[ \\t]+)?(?=///)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.nyar"
                        }
                    },
                    "end": "(?!\\G)",
                    "patterns": [
                        {
                            "begin": "///",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.nyar"
                                }
                            },
                            "end": "\\n",
                            "name": "comment.line.warning.nyar"
                        }
                    ]
                },
                {
                    "begin": "(^[ \\t]+)?(?=//!)",
                    "end": "(?!\\G)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "end": "\\n",
                            "begin": "//!",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.nyar"
                                }
                            },
                            "name": "comment.line.warning.nyar"
                        }
                    ]
                },
                {
                    "begin": "(^[ \\t]+)?(?=//\\?)",
                    "end": "(?!\\G)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "end": "\\n",
                            "begin": "//\\?",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.nyar"
                                }
                            },
                            "name": "comment.line.warning.nyar"
                        }
                    ]
                },
                {
                    "begin": "(^[ \\t]+)?(?=//\\*)",
                    "end": "(?!\\G)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "end": "\\n",
                            "begin": "//\\*",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.nyar"
                                }
                            },
                            "name": "comment.line.warning.nyar"
                        }
                    ]
                }
            ]
        },
        "String": {
            "patterns": [
                {
                    "begin": "(f?)(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.interpolation.nyar"
                        },
                        "2": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.begin.nyar"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.end.nyar"
                        }
                    },
                    "end": "\"",
                    "patterns": [
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": "\\\\(?:[btnfr\\\\\"']|[0-7]{1,3}|u[0-9A-Fa-f]{4})",
                            "name": "constant.character.escape.nyar"
                        },
                        {
                            "match": "\\\\.",
                            "name": "invalid.illegal.unrecognized-string-escape.nyar"
                        },
                        {
                            "match": ".",
                            "name": "string.quoted.double.interpolated.nyar"
                        }
                    ]
                },
                {
                    "begin": "(f?)(')",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.interpolation.nyar"
                        },
                        "2": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.begin.nyar"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.end.nyar"
                        }
                    },
                    "end": "'",
                    "patterns": [
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": "\\\\(?:[btnfr\\\\\"']|[0-7]{1,3}|u[0-9A-Fa-f]{4})",
                            "name": "constant.character.escape.nyar"
                        },
                        {
                            "match": "\\\\.",
                            "name": "invalid.illegal.unrecognized-string-escape.nyar"
                        },
                        {
                            "match": ".",
                            "name": "string.quoted.double.interpolated.nyar"
                        }
                    ]
                },
                {
                    "begin": "(c)(\")",
                    "end": "\"|$",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.interpolation.nyar"
                        },
                        "2": {
                            "name": "punctuation.definition.character.begin.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\\\(?:[btnfr\\\\\"']|[0-7]{1,3}|u[0-9A-Fa-f]{4})",
                            "name": "constant.character.escape.nyar"
                        },
                        {
                            "match": "\\\\.",
                            "name": "invalid.illegal.unrecognized-character-escape.nyar"
                        },
                        {
                            "match": "[^\"]{2,}",
                            "name": "invalid.illegal.character-literal-too-long"
                        },
                        {
                            "match": "(?<!\")[^\"]",
                            "name": "invalid.illegal.character-literal-too-long"
                        }
                    ],
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.character.end.nyar"
                        }
                    },
                    "name": "string.quoted.other constant.character.literal.nyar"
                },
                {
                    "begin": "(c)(')",
                    "end": "'|$",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.interpolation.nyar"
                        },
                        "2": {
                            "name": "punctuation.definition.character.begin.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\\\(?:[btnfr\\\\\"']|[0-7]{1,3}|u[0-9A-Fa-f]{4})",
                            "name": "constant.character.escape.nyar"
                        },
                        {
                            "match": "\\\\.",
                            "name": "invalid.illegal.unrecognized-character-escape.nyar"
                        },
                        {
                            "match": "[^']{2,}",
                            "name": "invalid.illegal.character-literal-too-long"
                        },
                        {
                            "match": "(?<!')[^']",
                            "name": "invalid.illegal.character-literal-too-long"
                        }
                    ],
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.character.end.nyar"
                        }
                    },
                    "name": "string.quoted.other constant.character.literal.nyar"
                },
                {
                    "begin": "\\b(\\w+)(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.interpolation.nyar"
                        },
                        "2": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.begin.nyar"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.end.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "match": ".",
                            "name": "string.quoted.double.interpolated.nyar"
                        }
                    ]
                },
                {
                    "begin": "\\b(\\w+)(')",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.interpolation.nyar"
                        },
                        "2": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.begin.nyar"
                        }
                    },
                    "end": "'",
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.double.interpolated.nyar punctuation.definition.string.end.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "match": ".",
                            "name": "string.quoted.double.interpolated.nyar"
                        }
                    ]
                }
            ]
        },
        "string-interpolation": {
            "patterns": [
                {
                    "name": "constant.character.escape.interpolation.nyar",
                    "match": "\\$\\$"
                },
                {
                    "match": "(\\$)([A-Z\\p{Lt}\\p{Lu}_a-z\\$\\p{Lo}\\p{Nl}\\p{Ll}][A-Z\\p{Lt}\\p{Lu}_a-z\\$\\p{Lo}\\p{Nl}\\p{Ll}0-9]*)",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.template-expression.begin.nyar"
                        }
                    }
                },
                {
                    "name": "punctuation.definition.template-expression.nyar",
                    "begin": "\\$\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.template-expression.begin.nyar"
                        }
                    },
                    "end": "\\}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.template-expression.end.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                }
            ]
        },
        "Constant": {
            "patterns": [
                {
                    "match": "\\b(false|null|true)\\b",
                    "name": "constant.language.nyar"
                },
                {
                    "match": "\\b(?:0[xX][0-9a-fA-F]+)\\b",
                    "name": "constant.numeric.nyar"
                },
                {
                    "match": "\\b(?:0[oO][0-7]+)\\b",
                    "name": "constant.numeric.nyar"
                },
                {
                    "match": "\\b(?:0[bB][0-1]+)\\b",
                    "name": "constant.numeric.nyar"
                },
                {
                    "match": "\\b([0-9](?:[_]?[0-9]+)*(?:[.](?:[_]?[0-9]+)+))(\\w+)?\\b",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.nyar"
                        },
                        "2": {
                            "name": "meta.function-call.generic.python"
                        }
                    }
                },
                {
                    "match": "\\b([0-9](?:[_]?[0-9]+)*)(\\w+)?\\b",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.nyar"
                        },
                        "2": {
                            "name": "meta.function-call.generic.python"
                        }
                    }
                }
            ]
        },
        "DotCall": {
            "patterns": [
                {
                    "match": "(\\.)([:\\w]+)",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.period.nyar"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "include": "#StructureName"
                                },
                                {
                                    "include": "#ReservedName"
                                },
                                {
                                    "match": "\\w+",
                                    "name": "meta.function-call.generic.python"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "Keyword": {
            "patterns": [
                {
                    "match": "\\b(return|throw|pass|break)\\b",
                    "name": "keyword.control.flow.jump.nyar"
                },
                {
                    "match": "\\b(else|if|then|do|while|for|in|yield|match|case)\\b",
                    "name": "keyword.control.flow.nyar"
                },
                {
                    "match": "\\b(catch|finally|try)\\b",
                    "name": "keyword.control.exception.nyar"
                },
                {
                    "match": "\\b(in|and|or|has|is)\\s",
                    "name": "keyword.operator.logical.python"
                },
                {
                    "match": "\\b(as)\\s",
                    "name": "keyword.operator.logical.python"
                },
                {
                    "match": "\\b(self|super)\\s",
                    "name": "keyword.operator.logical.python"
                }
            ]
        },
        "declarations": {
            "patterns": [
                {
                    "match": "\\b(def)\\s+(\\w+\\s+)*(\\w+)",
                    "captures": {
                        "1": {
                            "name": "keyword.declaration.nyar"
                        },
                        "2": {
                            "name": "storage.modifier.other.nyar"
                        },
                        "3": {
                            "name": "entity.name.function.declaration.nyar"
                        }
                    }
                },
                {
                    "match": "\\b(trait)\\s+(\\w+\\s+)*(\\w+\\s*)\\b",
                    "captures": {
                        "1": {
                            "name": "keyword.declaration.nyar"
                        },
                        "2": {
                            "name": "storage.modifier.other.nyar"
                        },
                        "3": {
                            "name": "entity.name.class.declaration.nyar"
                        }
                    }
                },
                {
                    "match": "\\b(?:(case)\\s+)?(class|object)\\s+([^\\s\\{\\(\\[]+)",
                    "captures": {
                        "1": {
                            "name": "keyword.declaration.nyar"
                        },
                        "2": {
                            "name": "keyword.declaration.nyar"
                        },
                        "3": {
                            "name": "entity.name.class.declaration"
                        }
                    }
                },
                {
                    "match": "\\b(type)\\s+(\\w+\\s+)*(\\w+\\s*)\\b",
                    "captures": {
                        "1": {
                            "name": "keyword.declaration.nyar"
                        },
                        "2": {
                            "name": "storage.modifier.other.nyar"
                        },
                        "3": {
                            "name": "entity.name.type.declaration.nyar"
                        }
                    }
                },
                {
                    "match": "\\b(let)\\s+([_a-zA-Z]*)",
                    "captures": {
                        "1": {
                            "name": "keyword.declaration.let.nyar"
                        },
                        "2": {
                            "name": "entity.name.decorator.nyar"
                        }
                    }
                },
                {
                    "match": "\\b(module)\\s+(object)\\s+([^\\s\\{\\(\\[]+)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.scoping.nyar"
                        },
                        "2": {
                            "name": "keyword.declaration.nyar"
                        },
                        "3": {
                            "name": "entity.name.class.declaration"
                        }
                    }
                },
                {
                    "begin": "\\b(module)\\s+",
                    "end": "(?<=[\\n;])",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.other.import.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "match": "(`[^`]+`|(?:[A-Z\\p{Lt}\\p{Lu}_a-z\\$\\p{Lo}\\p{Nl}\\p{Ll}][A-Z\\p{Lt}\\p{Lu}_a-z\\$\\p{Lo}\\p{Nl}\\p{Ll}0-9]*(?:(?<=_)[!#%&*+\\-\\/:<>=?@^|~\\p{Sm}\\p{So}]+)?|[!#%&*+\\-\\/:<>=?@^|~\\p{Sm}\\p{So}]+))",
                            "name": "entity.name.package.nyar"
                        },
                        {
                            "match": "\\.",
                            "name": "punctuation.definition.package"
                        }
                    ],
                    "name": "meta.package.nyar"
                }
            ]
        },
        "Generic": {
            "begin": "<",
            "beginCaptures": {
                "0": {
                    "name": "entity.name.class.start.sij"
                }
            },
            "end": ">",
            "endCaptures": {
                "0": {
                    "name": "entity.name.class.end.sij"
                }
            },
            "name": "entity.name.type.class.sij"
        },
        "GenericWhere": {
            "match": "\\b(where)\\s*((?:[+-]?\\w+\\s*,\\s*)*(?:[+-]?\\w+))",
            "captures": {
                "1": {
                    "name": "keyword.declaration.nyar"
                },
                "2": {
                    "match": "[+-]|\\w+",
                    "name": "entity.name.type.generic.nyar"
                }
            }
        },
        "GenericParametric": {
            "match": "(<)\\s*((?:[+-]?\\w+\\s*,\\s*)*(?:[+-]?\\w+))\\s*(>)",
            "captures": {
                "1": {
                    "name": "keyword.operator.assignment.start.nyar"
                },
                "2": {
                    "match": "[+-]|\\w+",
                    "name": "entity.name.type.generic.nyar"
                },
                "3": {
                    "name": "keyword.operator.assignment.end.nyar"
                }
            }
        },
        "Annotations": {
            "patterns": [
                {
                    "begin": "(@)(\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.annotation.punctuation.nyar"
                        },
                        "2": {
                            "name": "storage.type.annotation.start.nyar"
                        }
                    },
                    "end": "\\]",
                    "endCaptures": {
                        "0": {
                            "name": "storage.type.annotation.end.nyar"
                        }
                    },
                    "name": "storage.type.annotation.inner.nyar"
                },
                {
                    "begin": "(@)(\\w+)\\s*(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.annotation.punctuation.nyar"
                        },
                        "2": {
                            "name": "storage.type.annotation.nyar"
                        },
                        "3": {
                            "name": "storage.type.annotation.start.nyar"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "storage.type.annotation.end.nyar"
                        }
                    },
                    "name": "storage.type.annotation.inner.nyar"
                },
                {
                    "match": "(@)(\\w+)",
                    "captures": {
                        "1": {
                            "name": "storage.type.annotation.punctuation.nyar"
                        },
                        "2": {
                            "name": "storage.type.annotation.nyar"
                        }
                    }
                }
            ]
        },
        "initialization": {
            "match": "\\b(new)\\s+([^\\s,\\{\\}\\(\\)\\[\\]]+)",
            "captures": {
                "1": {
                    "name": "keyword.declaration.nyar"
                },
                "2": {
                    "name": "entity.name.class"
                }
            }
        },
        "meta-brackets": {
            "patterns": [
                {
                    "match": "\\{",
                    "name": "punctuation.section.block.begin.nyar"
                },
                {
                    "match": "\\}",
                    "name": "punctuation.section.block.end.nyar"
                },
                {
                    "match": "{|}|\\(|\\)|\\[|\\]",
                    "name": "meta.bracket.nyar"
                }
            ]
        },
        "StructureName": {
            "match": "(\\b([A-Z][\\w]*))",
            "captures": {
                "1": {
                    "name": "entity.name.class.nyar"
                }
            }
        },
        "VariableName": {
            "match": "(\\b([\\w]*))",
            "captures": {
                "1": {
                    "name": "variable.other.readwrite.nyar"
                }
            }
        },
        "ReservedName": {
            "match": "(\\b([_][\\w]*))",
            "captures": {
                "1": {
                    "name": "support.function.magic.nyar"
                }
            }
        },
        "backQuotedVariable": {
            "match": "`[^`]+`"
        },
        "meta-bounds": {
            "match": "<%|=:=|<:<|<%<|>:|<:",
            "name": "meta.bounds.nyar"
        },
        "block-comments": {
            "patterns": [
                {
                    "match": "%%%%%%",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.nyar"
                        }
                    },
                    "name": "comment.block.empty.nyar"
                },
                {
                    "begin": "^\\s*(/\\*\\*)(?!/)",
                    "end": "\\*/",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "match": "(@param)\\s+(\\S+)",
                            "captures": {
                                "1": {
                                    "name": "keyword.other.documentation.nyardoc.nyar"
                                },
                                "2": {
                                    "name": "variable.parameter.nyar"
                                }
                            }
                        },
                        {
                            "match": "(@(?:tparam|throws))\\s+(\\S+)",
                            "captures": {
                                "1": {
                                    "name": "keyword.other.documentation.nyardoc.nyar"
                                },
                                "2": {
                                    "name": "entity.name.class"
                                }
                            }
                        },
                        {
                            "match": "@(return|see|note|example|constructor|usecase|author|version|since|todo|deprecated|migration|define|inheritdoc)\\b",
                            "name": "keyword.other.documentation.nyardoc.nyar"
                        },
                        {
                            "match": "(\\[\\[)([^\\]]+)(\\]\\])",
                            "captures": {
                                "1": {
                                    "name": "punctuation.definition.documentation.link.nyar"
                                },
                                "2": {
                                    "name": "string.other.link.title.markdown"
                                },
                                "3": {
                                    "name": "punctuation.definition.documentation.link.nyar"
                                }
                            }
                        },
                        {
                            "include": "#block-comments"
                        }
                    ],
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.nyar"
                        }
                    },
                    "name": "comment.block.documentation.nyar"
                },
                {
                    "begin": "%%%",
                    "end": "%%%",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.nyar"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#block-comments"
                        }
                    ],
                    "name": "comment.block.nyar"
                }
            ]
        },
        "inheritance": {
            "patterns": [
                {
                    "match": "(extends|with|derives)\\s+([^\\s\\{\\(\\[\\]]+)",
                    "captures": {
                        "1": {
                            "name": "keyword.declaration.nyar"
                        },
                        "2": {
                            "name": "entity.other.inherited-class.nyar"
                        }
                    }
                }
            ]
        },
        "parameter-list": {
            "patterns": [
                {
                    "match": "(?<=[^\\._$a-zA-Z0-9])(`[^`]+`|[_a-z\\$\\p{Lo}\\p{Nl}\\p{Ll}][A-Z\\p{Lt}\\p{Lu}_a-z\\$\\p{Lo}\\p{Nl}\\p{Ll}0-9]*(?:(?<=_)[!#%&*+\\-\\/:<>=?@^|~\\p{Sm}\\p{So}]+)?)\\s*(:)\\s+",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.nyar"
                        },
                        "2": {
                            "name": "meta.colon.nyar"
                        }
                    }
                }
            ]
        }
    }
}
